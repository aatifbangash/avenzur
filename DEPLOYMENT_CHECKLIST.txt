================================================================================
                   SALES VIEWS DEPLOYMENT CHECKLIST
================================================================================

PROJECT:  Pharmacy & Branch-Level Sales Views for Cost Center
STATUS:   ✅ READY FOR DEPLOYMENT (After Migration 013 Fix)
DATE:     October 26, 2025

================================================================================
                        PRE-DEPLOYMENT CHECKLIST
================================================================================

Environment Verification:
  [ ] MySQL client installed (mysql --version works)
  [ ] Database access verified (can login to database)
  [ ] PHP available on server (/usr/bin/php or similar)
  [ ] Cron access available (crontab -e works)
  [ ] Server paths identified (/var/www/avenzur, /var/log/)
  [ ] Backups taken of production database

Documentation Review:
  [ ] Read FIX_SUMMARY.txt (this file helps!)
  [ ] Read docs/QUICK_FIX_SUMMARY.md (understand the fix)
  [ ] Read docs/VISUAL_FIX_SUMMARY.md (see visual explanation)
  [ ] Read docs/DEPLOYMENT_CARD.md (10-step procedure)
  [ ] Reviewed docs/SALES_VIEWS_QUICK_REFERENCE.md (queries)

Code Review:
  [ ] Reviewed app/migrations/cost-center/012_*.sql
  [ ] Reviewed app/migrations/cost-center/013_*.sql (FIXED VERSION)
  [ ] Reviewed database/scripts/etl_sales_aggregates.php

================================================================================
                         DEPLOYMENT CHECKLIST
================================================================================

PHASE 1: RUN MIGRATION 012 (2 min)
  [ ] Command: mysql < app/migrations/cost-center/012_*.sql
  [ ] Verify: SHOW TABLES LIKE 'sma_sales_aggregates%';
  [ ] Verify: Should show 4 tables created
  [ ] Check: No errors in output
  Estimated Time: 2 minutes ⏱️

PHASE 2: RUN MIGRATION 013 - FIXED VERSION (2 min)
  [ ] Command: mysql < app/migrations/cost-center/013_*.sql
  [ ] Verify: SHOW TABLES LIKE 'view_sales%';
  [ ] Verify: Should show 4 views created
  [ ] Check: No errors in output
  [ ] Query test: SELECT COUNT(*) FROM view_sales_per_pharmacy;
  Estimated Time: 2 minutes ⏱️

PHASE 3: DEPLOY ETL SCRIPT (5 min)
  [ ] Copy: cp database/scripts/etl_sales_aggregates.php /var/www/avenzur/
  [ ] Permissions: chmod +x /var/www/avenzur/etl_sales_aggregates.php
  [ ] Test: php /var/www/avenzur/etl_sales_aggregates.php
  [ ] Verify: Script runs without errors
  [ ] Check: Output shows ETL completed successfully
  Estimated Time: 5 minutes ⏱️

PHASE 4: BACKFILL HISTORICAL DATA (20 min)
  [ ] Command: php /var/www/avenzur/etl_sales_aggregates.php backfill 2025-01-01 2025-10-26
  [ ] Wait: ~3-5 seconds for execution
  [ ] Verify: sma_sales_aggregates has data
  [ ] Query: SELECT COUNT(*) FROM sma_sales_aggregates;
  [ ] Check: Should return count > 0
  Estimated Time: 20 minutes ⏱️

PHASE 5: SETUP CRON JOBS (10 min)
  [ ] Edit: crontab -e
  [ ] Add Line 1: */15 * * * * /usr/bin/php /var/www/avenzur/etl_sales_aggregates.php
  [ ] Add Line 2: 0 2 * * * /usr/bin/php /var/www/avenzur/etl_sales_aggregates.php backfill
  [ ] Save and exit editor
  [ ] Verify: crontab -l shows both lines
  [ ] Create: /var/log/etl_sales.log (for cron output)
  Estimated Time: 10 minutes ⏱️

PHASE 6: INITIAL DATA VERIFICATION (5 min)
  [ ] Query: SELECT COUNT(*) FROM view_sales_per_pharmacy;
  [ ] Check: Returns count > 0
  [ ] Query: SELECT * FROM view_sales_per_pharmacy LIMIT 5;
  [ ] Check: Returns 5 rows of data
  [ ] Verify: Columns include today_sales_amount, current_month_sales_amount, ytd_sales_amount
  Estimated Time: 5 minutes ⏱️

PHASE 7: PERFORMANCE TEST (5 min)
  [ ] Run sample query (see SALES_VIEWS_QUICK_REFERENCE.md)
  [ ] Verify: Query executes in < 100ms
  [ ] Check: Results look correct
  [ ] Compare: Expected improvement: 10-20x faster
  Estimated Time: 5 minutes ⏱️

TOTAL DEPLOYMENT TIME: ~50 minutes (with buffer: 60 minutes)

================================================================================
                      POST-DEPLOYMENT CHECKLIST
================================================================================

DAY 1 - IMMEDIATE VERIFICATION
  [ ] Check cron logs: tail -f /var/log/etl_sales.log
  [ ] Verify first cron run executed (15-min cycle)
  [ ] Check for any errors in logs
  [ ] Query views to see updated data
  [ ] Monitor for any database issues

WEEK 1 - MONITORING
  [ ] Monitor cron execution daily
  [ ] Verify data freshness (should update every 15 min)
  [ ] Check disk space (aggregate tables grow daily)
  [ ] Validate data accuracy (spot check against source)
  [ ] Review performance metrics

BEFORE PRODUCTION DASHBOARDS
  [ ] Write sample dashboard queries
  [ ] Test query performance with real dashboard load
  [ ] Verify drill-down capabilities work
  [ ] Setup dashboard alerts if needed
  [ ] Document dashboard query patterns

ONGOING MAINTENANCE
  [ ] Monitor cron job execution (weekly)
  [ ] Check disk space usage (monthly)
  [ ] Archive old hourly data if needed (optional)
  [ ] Performance baseline reviews (quarterly)

================================================================================
                       TROUBLESHOOTING GUIDE
================================================================================

Problem: Migration 013 still gives "sma_dim_warehouse doesn't exist" error
Solution: 
  [ ] Make sure you're using the FIXED version of migration 013
  [ ] Check file: app/migrations/cost-center/013_create_sales_views_pharmacy_branch.sql
  [ ] Verify: File should NOT have "LEFT JOIN sma_dim_warehouse"
  [ ] If it does, re-apply the fix from SALES_VIEWS_FIX_MIGRATION_013.md

Problem: ETL script won't run
Solution:
  [ ] Check PHP is available: /usr/bin/php --version
  [ ] Check file permissions: chmod +x etl_sales_aggregates.php
  [ ] Check database credentials in environment
  [ ] Test directly: php etl_sales_aggregates.php

Problem: Views return 0 rows
Solution:
  [ ] Check if migration 012 created tables: SHOW TABLES LIKE 'sma_sales_aggregates%';
  [ ] Check if ETL ran: SELECT COUNT(*) FROM sma_sales_aggregates;
  [ ] Run backfill if needed: php etl_sales_aggregates.php backfill 2025-01-01 today
  [ ] Check ETL logs for errors

Problem: Cron jobs not running
Solution:
  [ ] Verify cron is registered: crontab -l
  [ ] Check cron logs: /var/log/cron (or /var/log/system.log on macOS)
  [ ] Test cron manually: php /var/www/avenzur/etl_sales_aggregates.php
  [ ] Check PHP path in crontab (use full path: /usr/bin/php)

Problem: Query performance is slow
Solution:
  [ ] Check if indexes exist: SHOW INDEXES FROM sma_sales_aggregates;
  [ ] Check query plan: EXPLAIN SELECT ... FROM view_sales_per_pharmacy;
  [ ] Check table statistics: ANALYZE TABLE sma_sales_aggregates;
  [ ] Monitor database load: mysqladmin processlist

================================================================================
                          ROLLBACK PROCEDURE
================================================================================

If you need to rollback (unlikely - no data loss risk):

Step 1: Stop cron jobs
  [ ] crontab -e (remove the 2 ETL-related lines)

Step 2: Drop views
  [ ] DROP VIEW IF EXISTS view_sales_per_pharmacy;
  [ ] DROP VIEW IF EXISTS view_sales_per_branch;
  [ ] DROP VIEW IF EXISTS view_purchases_per_pharmacy;
  [ ] DROP VIEW IF EXISTS view_purchases_per_branch;

Step 3: Drop tables (optional - only if you need complete rollback)
  [ ] DROP TABLE IF EXISTS sma_sales_aggregates;
  [ ] DROP TABLE IF EXISTS sma_purchases_aggregates;
  [ ] DROP TABLE IF EXISTS sma_sales_aggregates_hourly;
  [ ] DROP TABLE IF EXISTS etl_sales_aggregates_log;

Step 4: Verify system state
  [ ] Check existing cost center views still work
  [ ] Verify no errors in application logs
  [ ] Confirm existing dashboards unaffected

Rollback time: < 5 minutes

================================================================================
                         SUCCESS CRITERIA
================================================================================

Deployment is successful when:

✅ All 4 views created without errors
✅ All 4 views return data when queried
✅ Backfilled data shows 300+ rows in aggregates
✅ Cron jobs run automatically every 15 minutes
✅ Query performance is 50-100ms (< 100ms requirement met)
✅ No errors in cron logs
✅ Data freshness is current (within 15 minutes)
✅ Existing system remains unaffected
✅ Dashboard integration testing passed
✅ Stakeholder sign-off obtained

================================================================================
                        SIGN-OFF SECTION
================================================================================

Deployment Team: _______________________________________________

Date Started: ___________________  Time: _______________________

Date Completed: ________________  Time: _______________________

Issues Encountered: [ ] None    [ ] Minor    [ ] Major

Issue Details (if any): _________________________________________

_________________________________________________________________

Sign-Off: _______________________  Date: _______________________

================================================================================
                    END OF DEPLOYMENT CHECKLIST
================================================================================

For questions, refer to:
  - docs/QUICK_FIX_SUMMARY.md (understand the fix)
  - docs/DEPLOYMENT_CARD.md (detailed step-by-step)
  - docs/SALES_VIEWS_QUICK_REFERENCE.md (query examples)
  - docs/PROJECT_COMPLETE.md (comprehensive overview)

================================================================================
